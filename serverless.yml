# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: spring-cloud-function-aws
# app and org for use with dashboard.serverless.com
#app: spring-cloud-function-aws
#org:

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: java11
  lambdaHashingVersion: 20201221
  tags:
    project: Spring Cloud Function

# you can overwrite defaults here
  stage: dev
  region:  # region
  profile: # profile
  memory: 1024
  timeout: 10

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - "Ref" : "ServerlessDeploymentBucket"
            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value

# you can add packaging information here
package:
  artifact: target/spring-cloud-function-0.0.1-SNAPSHOT-aws.jar

functions:
  health:
    handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker
    memorySize: 512
    description: Health API.
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: health
    events:
      - http:
          path: health
          method: GET
          useProviderTags: true

  greeter:
    handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: greeter

# adding the plugin to be able to run the offline emulation
plugins:
  - serverless-offline
